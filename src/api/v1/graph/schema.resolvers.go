package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/chack-check/chats-service/api/v1/graph/model"
)

// CreateMessage is the resolver for the createMessage field.
func (r *mutationResolver) CreateMessage(ctx context.Context, request model.CreateMessageRequest) (*model.Message, error) {
	panic(fmt.Errorf("not implemented: CreateMessage - createMessage"))
}

// EditMessage is the resolver for the editMessage field.
func (r *mutationResolver) EditMessage(ctx context.Context, chatID string, messageID string, request model.ChangeMessageRequest) (*model.Message, error) {
	panic(fmt.Errorf("not implemented: EditMessage - editMessage"))
}

// CreateChat is the resolver for the createChat field.
func (r *mutationResolver) CreateChat(ctx context.Context, request model.CreateChatRequest) (*model.Chat, error) {
	panic(fmt.Errorf("not implemented: CreateChat - createChat"))
}

// AddChatMembers is the resolver for the addChatMembers field.
func (r *mutationResolver) AddChatMembers(ctx context.Context, chatID string, members []string) (*model.Chat, error) {
	panic(fmt.Errorf("not implemented: AddChatMembers - addChatMembers"))
}

// AddChatAdmins is the resolver for the addChatAdmins field.
func (r *mutationResolver) AddChatAdmins(ctx context.Context, chatID string, admins []string) (*model.Chat, error) {
	panic(fmt.Errorf("not implemented: AddChatAdmins - addChatAdmins"))
}

// EditChat is the resolver for the editChat field.
func (r *mutationResolver) EditChat(ctx context.Context, chatID string, request model.EditChatRequest) (*model.Chat, error) {
	panic(fmt.Errorf("not implemented: EditChat - editChat"))
}

// GetChatMessages is the resolver for the getChatMessages field.
func (r *queryResolver) GetChatMessages(ctx context.Context, chatID string, page *int, perPage *int) (*model.PaginatedMessages, error) {
	panic(fmt.Errorf("not implemented: GetChatMessages - getChatMessages"))
}

// GetChats is the resolver for the getChats field.
func (r *queryResolver) GetChats(ctx context.Context, page *int, perPage *int) (*model.PaginatedChats, error) {
	panic(fmt.Errorf("not implemented: GetChats - getChats"))
}

// SearchChats is the resolver for the searchChats field.
func (r *queryResolver) SearchChats(ctx context.Context, query string, page *int, perPage *int) (*model.PaginatedChats, error) {
	panic(fmt.Errorf("not implemented: SearchChats - searchChats"))
}

// GetChat is the resolver for the getChat field.
func (r *queryResolver) GetChat(ctx context.Context, chatID string) (*model.Chat, error) {
	panic(fmt.Errorf("not implemented: GetChat - getChat"))
}

// GetChatAttachments is the resolver for the getChatAttachments field.
func (r *queryResolver) GetChatAttachments(ctx context.Context, chatID string, fileType model.FileType) (*model.FileObjectResponse, error) {
	panic(fmt.Errorf("not implemented: GetChatAttachments - getChatAttachments"))
}

// SearchMessages is the resolver for the searchMessages field.
func (r *queryResolver) SearchMessages(ctx context.Context, query string, chatID int, page *int, perPage *int) (*model.PaginatedMessages, error) {
	panic(fmt.Errorf("not implemented: SearchMessages - searchMessages"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
